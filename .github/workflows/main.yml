name: Build and deploy CV

on: 
  push:
    branches:
      - master

jobs:
  build:
    name: Build CV for ${{ matrix.target }} on ${{ matrix.language }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [rus, eng]
        target: [web, gamedev]
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Compile project
        uses: xu-cheng/latex-action@v2
        with:
          root_file: main.tex
          args: -jobname=bakanov_cv_${{ matrix.target }}_${{ matrix.language }} -pdf -file-line-error -halt-on-error -interaction=nonstopmode -usepretex="\\AtBeginDocument{\\${{ matrix.target }}\\${{ matrix.language }}}"
          compiler: latexmk
      - name: Upload result
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}_${{ matrix.language }}
          path: bakanov_cv_${{ matrix.target }}_${{ matrix.language }}.pdf

  prepare-release:
    name: Prepare release of latest CV
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release \#${{ github.sha }}
          draft: true
      - name: Print Release URL
        run: |
          echo ${{ steps.create_release.outputs.html_url }}

  deploy:
    name: Deploy CV for ${{ matrix.target }} on ${{ matrix.language }}
    runs-on: ubuntu-latest
    needs: [build, prepare-release]
    strategy:
      matrix:
        language: [rus, eng]
        target: [web, gamedev]
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.target }}_${{ matrix.language }}
          path: ./
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare-release.outputs.upload_url }}
          asset_name: ${{ matrix.target }}_${{ matrix.language }}
          asset_path: bakanov_cv_${{ matrix.target }}_${{ matrix.language }}.pdf
          asset_content_type: application/pdf
